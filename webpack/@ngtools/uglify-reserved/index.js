
module.exports = {
    types: [
        "$cacheFactory",
        "$cache",
        "$compile",
        "$attributesm",
        "$scope",
    ],
    providers: [
        "$anchorScrollProvider",
        "$animateProvider",
        "$compileProvider",
        "$controllerProvider",
        "$filterProvider",
        "$httpProvider",
        "$interpolateProvider",
        "$locationProvider",
        "$logProvider",
        "$parseProvider",
        "$qProvider",
        "$rootScopeProvider",
        "$sceDelegateProvider",
        "$sceProvider",
        "$templateRequestProvider",
    ],
    services: [
        "$anchorScroll",
        "$animate",
        "$animateCss",
        "$cacheFactory",
        "$compile",
        "$controller",
        "$document",
        "$exceptionHandler",
        "$filter",
        "$http",
        "$httpBackend",
        "$httpParamSerializer",
        "$httpParamSerializerJQLike",
        "$interpolate",
        "$interval",
        "$jsonpCallbacks",
        "$locale",
        "$location",
        "$log",
        "$parse",
        "$q",
        "$rootElement",
        "$rootScope",
        "$sce",
        "$sceDelegate",
        "$templateCache",
        "$templateRequest",
        "$timeout",
        "$window",
        "$xhrFactory",
    ],
    inject: [
        "$injector",
        "$provide",
    ],
    animate: [
        "$animate",
        "$animateCss",
        "$ariaProvider",
        "$aria",
    ],
    componentRouter: [
        "$rootRouter",
        "$routerRootComponent",
    ],
    cookies: [
        "$cookiesProvider",
        "$cookieStore",
        "$cookies",
    ],
    mock: [
        "$animate",
        "$componentController",
        "$controller",
        "$exceptionHandler",
        "$httpBackend",
        "$interval",
        "$log",
        "$timeout",
        "$httpBackend",
    ],
    resources: [
        "$resourceProvider",
        "$resource",
    ],
    routers: [
        "$route",
        "$routeParams",
        "$routeProvider",
    ],
    sanitizeAndTouck: [
        "$sanitizeProvider",
        "$sanitize",
        "$swipe",
    ],
    uirouters: [
        "$uiRouterProvider",
        "$stateProvider",
        "$transitionsProvider",
        "$uiViewScrollProvider",
        "$urlRouterProvider",
        "$urlMatcherFactoryProvider",
        "$uiRouter",
        "$trace",
        "$transitions",
        "$state",
        "$stateRegistry",
        "$stateRegistryProvider",
        "$urlService",
        "$uiRouterGlobals",
        "$uiViewScroll",
        "$stateParams",
        "$urlRouter",
        "$urlMatcherFactory",
        "$transition$",
        "$stateParams",
    ],
    all: (reserved) => {
        const arr = [];
        Object.keys(reserved).forEach(key => {
            if (key === "all") {
                return;
            }
            arr.push(...reserved[key]);
        });
        return arr;
    }
};